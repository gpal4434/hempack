import { StaticImageData } from "next/image";
import { ReactNode } from "react";

export interface DataValueProps {
    src: string | StaticImageData;
    key: number;
    title: string;
    skill: string[];
    desc: string;
    date: string;
    pc?: string[];
    mobile?: string[];
    details?: ReactNode;
}
export const data: DataValueProps[] = [
    {
        src: "spolive",
        key: 1,
        title: "SPOLIVE",
        skill: ["HTML", "CSS"],
        desc: "Vue2.0 로 제작된 승부예측 베팅 사이트로 기존 운영되고 있던 사이트를 유지보수 및 추가 기능 퍼블리싱 100% 참여함",
        date: "2022.06 ~",
        pc: ["spolive01", "spolive02", "spolive03", "spolive04", "spolive05"],
        mobile: ["spolivem01", "spolivem02", "spolivem03"],
        details: (
            <>
                스포라이브는 국내 유일의 합법 스포츠 베팅 승부 예측 게임 서비스로, 다양한 스포츠 경기에서 사용자들이
                안전하고 즐겁게 베팅을 즐길 수 있는 독창적인 환경을 제공합니다. Vue 2.0으로 구축된 이 플랫폼은 사용자
                경험을 중시한 UX와 최적화된 퍼포먼스를 기반으로 하여 현재까지 성공적인 운영을 이어가고 있습니다. 저는
                입사 후 이 서비스의 유지보수와 함께 새로운 페이지와 기능을 개발하며, 전체 웹 퍼블리싱을 책임지는 역할을
                맡아왔습니다. HTML, CSS(SCSS), JavaScript 등 웹 퍼블리셔로서의 주요 기술을 활용해 퍼블리싱 작업을
                최적화하고, 사용자 경험을 최우선으로 고려한 UI/UX 개선에 힘쓰고 있습니다. 이러한 과정에서 한정된 리소스
                내에서도 최대한의 효과를 낼 수 있는 전략을 모색하여 더 나은 서비스를 제공하고 있습니다.
                <br />
                스포라이브는 국내를 넘어 해외 시장으로의 확장을 꾀하며, 다양한 국가에 걸쳐 글로벌한 영향력을 넓혀가고
                있습니다. 이에 따라 저는 각 국가별로 스포라이브를 현지화한 서비스에서 퍼블리싱 작업을 맡았습니다. 대만의
                Quiz Quiz, 인도네시아의 redwinds88, 베트남의 all sports 등 여러 버전을 위해 현지화 작업을 수행하며 각
                시장에 맞는 UI와 기능을 기획하고 적용했습니다. 서비스의 본질은 유지하되, 각 국가의 사용자 특성과 니즈에
                맞춘 인터페이스를 구현하기 위해 노력하며, UI/UX 측면에서도 최대한의 편리함을 제공하고자 설계하였습니다.
                <br />
                <br />
                또란, 스포라이브 내에서 이벤트 배너와 같은 화려한 요소의 디자인을 제외한 UI/UX 다양한 인터페이스 요소에
                대해 사용자 경험을 향상시키는 작업 디자인을 직접 담당했습니다. 단순히 시각적인 디자인을 넘어 사용자들이
                보다 직관적이고 편리하게 사용할 수 있도록 기능적인 부분까지 고려하였습니다. 이를 통해 사용자 관점에서
                스포라이브가 최상의 인터페이스와 경험을 제공할 수 있도록 노력했고, 만족도와 사용성을 높이는 데
                기여했습니다.
                <br />
                <br />
                2024년 초반부터 기존 스포라이브 서비스를 한층 더 발전시키기 위해 리뉴얼 프로젝트를 시작했습니다. 리뉴얼
                작업은 기존의 UI/UX에서 발견된 불편함을 개선하고, 변화하는 사용자 트렌드와 니즈에 맞춘 새로운
                인터페이스를 제공하는 것을 목표로 하고 있습니다. 본격적으로 프론트엔드 개발을 시작하게 되었습니다.
                <br />
                다음 페이지에서는 새롭게 변화하는 스포라이브 리뉴얼 버전에 대해 구체적으로 소개하겠습니다.
            </>
        ),
    },

    {
        src: "next",
        key: 2,
        title: "SPOLIVE Renewal",
        skill: ["NEXT.js", "Vanilla Extract", "Typescript"],
        desc: "Vue2.0으로 제작된 기존 스포라이브를 next.js로 리뉴얼하면서, 디자인 개선하여 좀 더 친근하고 편한 UI/UX를 만들었으며 본격적으로 프론트엔드 개발에 참여함",
        date: "2024.08 ~",
        pc: ["next01", "next02", "next03", "next04", "next05"],
        details: (
            <>
                저는 Vue2.0으로 제작된 기존 스포라이브를 Next.js로 리뉴얼하는 작업을 맡았습니다. 이를 통해 기존의 웹
                애플리케이션을 더 현대적이고 사용자 친화적인 UI/UX로 개선하고, 본격적으로 프론트엔드 개발에 참여하는
                기회를 가졌습니다. 리뉴얼 과정에서 디자인에 많은 신경을 썼으며, 사용자 경험을 최우선으로 고려하여
                접근성을 높이고, 직관적이고 편리한 UI를 구현했습니다.
                <br />
                <br />
                프론트엔드 개발에서 중요한 요소 중 하나인 API 호출을 다루면서 동기/비동기 처리 방식에 대한 이해를 심화할
                수 있었습니다. 이를 통해 데이터를 효과적으로 바인딩하는 방법을 배우고, API 요청의 흐름을 관리하며 실시간
                데이터 업데이트와 상태 관리를 능숙하게 처리할 수 있게 되었습니다. 또한, 데이터 바인딩을 통해 UI와 백엔드
                간의 원활한 통신을 실현할 수 있었습니다.
                <br />
                <br />
                이 프로젝트에서는 비밀번호 변경, 1:1 문의하기 등 기본적인 CRUD(생성, 조회, 수정, 삭제) 기능을
                개발했습니다. 이러한 기능을 통해 프론트엔드 개발에서 필요한 로직과 상태 관리 방법을 배우고, 사용자
                인터페이스와 백엔드 서버 간의 원활한 통합을 경험할 수 있었습니다. 사용자 입력을 효율적으로 처리하고,
                프론트엔드에서 실시간으로 반영되는 데이터를 관리하며 더욱 다채로운 기능을 추가할 수 있었습니다.
                <br />
                디자인 또한 큰 비중을 차지했습니다. UI/UX 디자인을 직접 개선하고 적용하는 과정에서 사용자 경험을 더욱
                중요하게 생각하게 되었으며, 디자인의 세부적인 부분까지 신경을 쓰며 작업했습니다. 결과적으로 UI는 더욱
                친근하고 직관적으로 변형되었고, 사용자들에게 편안하고 매끄러운 사용 경험을 제공할 수 있었습니다.
                <br />
                <br />
                이 프로젝트에서 저는 퍼블리싱 작업에 100%, 디자인 작업에 100%, 프론트엔드 개발에는 40% 정도
                기여하였습니다. 특히 프론트엔드 개발을 처음으로 경험하면서, 기존의 퍼블리싱 작업을 넘어 좀 더 심화된
                개발 분야로 확장할 수 있었던 소중한 경험이었습니다. 이를 통해, 단순히 디자인과 레이아웃을 구현하는 데서
                벗어나 실제 웹 애플리케이션을 구축하는 과정에 참여하며 더 큰 개발의 흐름을 이해할 수 있었습니다.
                <br />
                <br />이 프로젝트를 통해 프론트엔드 개발의 매력을 깊이 느꼈고, 이후 사이드 프로젝트를 진행하며
                추가적으로 기술을 확장하고 있습니다. 사이드 프로젝트에서는 최신 프레임워크와 라이브러리를 실험하고, 더
                많은 기능을 구현하는 데 중점을 두고 있습니다. 이 과정에서 제 프론트엔드 개발 역량을 더욱 향상시키기 위해
                다양한 학습을 지속하고 있습니다.
            </>
        ),
    },

    {
        src: "global",
        key: 3,
        title: "BETNEX",
        skill: ["HTML", "Css", "Javascript"],
        desc: "위믹스와 스포라이브의 콜라보로, 가상화폐와 NFT 기술을 활용한 글로벌 버전의 스포라이브 베팅 사이트였으나 보류됨 ",
        date: "2023.10 ~ 2024.04",
        pc: ["betnex01", "betnex01", "betnex03"],
        details: (
            <>
                이 프로젝트는 위믹스와 스포라이브의 콜라보레이션을 기반으로, 가상화폐와 NFT 기술을 활용한 글로벌 버전의
                스포라이브 베팅 사이트를 개발하는 것이 주요 목표였습니다. 사이트는 주로 전 세계 사용자들을 대상으로 한
                트렌디한 게임 플랫폼으로, 사용자가 쉽게 접근하고 즐길 수 있도록 직관적인 UI/UX 설계를 중점적으로
                고려했습니다.
                <br />
                <br />
                이 프로젝트는 PC 버전으로만 제작되었으며, 퍼블리싱을 100% 단독으로 담당했습니다. 다양한 페이지를
                구현하는 과정에서 반응형 디자인과 UI 요소의 일관성을 유지하기 위해 많은 시간과 노력을 들였습니다. 특히
                페이지 수가 많아 레이아웃 설계에 많은 시간을 투자했고, 이를 통해 디자인의 효율성과 구조를 정교하게
                다듬을 수 있었습니다.
                <br />
                <br />
                프로젝트에서 초기 설계부터 퍼블리싱까지 모든 과정이 단독 작업이었지만, 그 과정에서 효율적인 개발
                프로세스와 타임라인 관리를 배우게 되었습니다. 디자인과 퍼블리싱의 간극을 메꾸면서 동시에 기능 구현과
                디버깅을 효과적으로 처리할 수 있는 능력을 키웠습니다. 또한, 프로젝트의 진행 중에도 협업을 통해 문제를
                해결하고 효율적인 작업 분담을 통해 일정 내에 작업을 완료하는 방법을 배웠습니다.
                <br />
                <br />
                프로젝트의 초기 단계부터 레이아웃 설계에 심혈을 기울였습니다. 페이지가 많고 복잡했기 때문에 각 페이지의
                구조와 사용자 흐름을 고려한 레이아웃을 설계해야 했습니다. 이를 통해 각 페이지가 일관성 있게 동작할 수
                있도록 하였고, 디자인이 사용자의 경험에 어떻게 영향을 미칠지를 항상 고민했습니다.
                <br />
                <br />
                UI/UX 디자인은 사용자 경험을 최우선으로 고려하여 디자인 요소를 선택하고 적용했습니다. 사이트의 주요
                기능을 직관적으로 제공하면서도, 사용자들에게 시각적으로 즐겁고 매력적인 경험을 제공하기 위해 미니멀한
                디자인을 추구했습니다. 또한, 다양한 필터링 기능을 통해 사용자가 원하는 정보를 빠르게 찾을 수 있도록 UI를
                최적화했습니다.
            </>
        ),
    },
    {
        src: "gift",
        key: 4,
        title: "FURSYS MORE",
        skill: ["JavaScript", "HTML", "CSS"],
        desc: "SIDE PROJECT로 진행했던 상품권 매입 사이트로 Vanilla Javascript로 이벤트 처리, 모달 기능 구현 등 퍼블리싱 100% 참여함",
        date: "2024.08",
        pc: [
            "fursysmore01",
            "fursysmore02",
            "fursysmore03",
            "fursysmore04",
            "fursysmore05",
            "fursysmore06",
            "fursysmore07",
            "fursysmore08",
        ],
        details: (
            <>
                이번 프로젝트는 지인의 요청으로 처음 시작된 사이드잡으로, 상품권 매입 사이트를 위한 퍼블리싱
                작업이었습니다. 이 사이트는 상품권 교환 신청을 위한 메인 페이지가 중심이었으며, 사용자 경험을 고려한
                직관적인 UI/UX 설계에 중점을 두었습니다.
                <br />
                <br />
                사이트의 가장 중요한 기능 중 하나는 상품권 번호 입력이었으며, 사용자가 상품권 번호를 입력할 때마다
                자동으로 포커스가 이동하도록 구현하였습니다. 사용자는 4자리 번호를 차례대로 입력하는 방식으로 진행되며,
                각 입력란은 최대 4자리까지만 입력이 가능하도록 제한되었습니다. 4자리가 모두 입력되면 다음 입력란으로
                자동 포커스 이동하도록 하여 사용자의 편리함을 높였습니다. 이 기능을 구현하기 위해 자바스크립트의 이벤트
                핸들러와 DOM 조작을 활용하였으며, 폼 입력의 직관성을 강화했습니다. 상품권 번호 4자리 입력란이 모두
                채워지면, 등록하기 버튼이 비활성화에서 활성화로 변환되는 기능을 추가했습니다. 사용자가 번호를 모두
                입력해야만 등록하기 버튼이 활성화되도록 하여, 부주의로 인한 잘못된 입력을 방지하고, 올바른 상품권 번호가
                입력되었을 때만 등록할 수 있게 하였습니다. 이를 위해 상태 관리와 조건문을 활용하여 버튼의 활성화 여부를
                동적으로 변경했습니다.
                <br />
                <br />
                메인 페이지에는 공지사항 롤링 기능을 추가하여, 중요한 정보를 자동으로 표시하고, 사용자가 이를 쉽게
                확인할 수 있도록 했습니다. 롤링 배너는 주기적으로 내용이 바뀌는 형태로, 사용자에게 최신 공지사항이나
                중요한 업데이트가 자동으로 표시되도록 구현되었습니다.
                <br />
                <br />
                이번 프로젝트는 순수 자바스크립트로만 구현되었으며, 외부 라이브러리나 프레임워크 없이 DOM 조작, 이벤트
                리스너, 폼 처리와 같은 기본적인 웹 기술을 중심으로 작업을 진행했습니다. 자바스크립트를 활용하여 사용자
                입력값 관리와 UI 상호작용을 구현하는 데 중점을 두었으며, 자바스크립트의 기본 개념을 더욱 깊이 이해하는
                계기가 되었습니다.
                <br />
                <br />
                퍼블리싱 작업을 하면서 반응형 디자인의 필요성을 절실히 느꼈으며, 사용자 경험을 최우선으로 고려한 웹
                페이지 디자인을 구현하는 데 많은 경험을 쌓았습니다. 이 프로젝트에서 저는 퍼블리싱 작업을 전담했으며,
                디자인 및 기능 구현 모두에서 100% 기여했습니다.
            </>
        ),
    },
    {
        src: "native",
        key: 5,
        title: "SPOLIVE App",
        skill: ["React Native", "Vanilla Extract"],
        desc: "기본 모바일 웹이었던 스포라이브를 React Native로 App 구현하는데 UI 개발 100%와 페이지 개발 30% 기여함",
        date: "2024.01 ~ 2024.05",
        mobile: ["app01", "app02", "app03", "app04", "app05", "app06", "app07"],
        details: (
            <>
                이 프로젝트는 React Native를 활용한 스포라이브 앱 버전의 퍼블리싱 및 UI 개발을 위한 작업이었습니다. 처음
                프로젝트에 참여하면서, Android Studio와 React Native의 환경 설정 부분에서 많은 시간을 보냈습니다.
                Android Studio의 설치와 React Native CLI 설정, 그리고 안드로이드 에뮬레이터와 실디바이스에서 앱을
                실행하기 위한 기본적인 환경을 구성하는 데 많은 시간을 투자했습니다. 처음에는 네이티브 앱 개발 환경에
                대한 이해가 부족했지만, 빌드 및 디버깅과 같은 기본적인 작업을 익히며 점차 React Native에 대한 자신감을
                키워 나갔습니다.
                <br />
                <br />
                퍼블리싱 작업을 시작하면서, 웹 퍼블리셔로서의 경험을 바탕으로 기본적인 UI 구현을 했습니다. 앱의 각
                화면에 대한 디자인 요구사항을 바탕으로 React Native의 기본적인 컴포넌트들을 활용하여 UI를 구성했습니다.
                앱 내에서는 반응형 레이아웃을 지원하기 위해 Flexbox와 스타일링을 적극적으로 활용했으며, UI/UX에 대한
                개선 작업도 함께 진행했습니다. 폰트 크기, 버튼 크기, 아이콘 디자인 등을 조정하여, 모바일 환경에 적합한
                UI를 만들어 갔습니다.
                <br />
                <br />
                처음에 퍼블리싱 작업만 하던 저는, React Native 프로젝트를 진행하는 중에 상태 관리와 조건부 렌더링에 대한
                필요성을 깨닫게 되었습니다. 전통적인 웹 퍼블리싱에서는 보통 CSS 클래스만을 이용해 스타일링을 하곤
                했으나, React Native에서는 상태에 따라 UI가 동적으로 변하는 방식으로 스타일을 적용할 수 있음을 알게
                되었습니다. 예를 들어, 사용자의 로그인 여부나 버튼의 활성화 상태에 따라 스타일을 동적으로 변경해야 하는
                경우가 많았습니다. 그때부터는 useState와 useEffect와 같은 React hooks를 활용하여 상태 관리를 통해 UI를
                변경하는 방법을 배우고, 이를 기반으로 조건부 스타일링을 적용하게 되었습니다. 또한, 이전에는 단순히 CSS
                클래스를 작성하여 개발자에게 넘기는 형태로 작업하였지만, React Native에서는 상태와 조건문을 활용하여 UI
                스타일을 동적으로 적용하는 방식으로 개발이 진행되었습니다. 이를 통해 컴포넌트의 재사용성을 높이고,
                동적인 UI 구성에 대해 더 깊이 이해하게 되었습니다.
            </>
        ),
    },
    {
        src: "china",
        key: 6,
        title: "Let's Go China",
        skill: ["HTML", "CSS", "jQeury"],
        desc: "순수교육의 렛츠고 시리즈 중 하나로 새로 런칭한 교육 서비스로 퍼블리싱 100% 참여함",
        date: "2020.09 ~ 2020.10",
        pc: ["china"],
        details: (
            <>
                이 프로젝트는 기초부터 쉽고 재미있게 동화책 스토리 학습과 국내 최초 한자 쓰기 기능을 통해
                HSK(한어수평고시)에 대비할 수 있는 ‘렛츠고차이나’라는 사이트를 제작하는 프로젝트였습니다. 이 프로젝트는
                저에게 순수교육에 입사하고 맡게 된 중요한 웹사이트 프로젝트로, 제 경력에서 중요한 경험이었습니다.
                처음부터 끝까지 기획, 디자인, 개발 등 다양한 부분에 참여하면서 많은 것을 배우고 성장할 수 있었습니다.
                <br />
                <br />
                이 프로젝트는 기획과 디자인이 이미 정해진 상태에서 시작되었습니다. 그에 따라 기획자와 디자이너와의
                협업을 통해 사이트의 기능과 디자인 요소들을 세부적으로 조율하고 최종 구현 방안을 논의하였습니다.
                기획자와 디자이너와의 의견 조율을 통해, 사이트가 유아 교육에 적합한 쉽고 재미있는 요소들을 가질 수
                있도록 했습니다. 특히, 유아 대상인 만큼, 앙증맞은 캐릭터와 친근한 색상을 사용해 전체적인 분위기를 밝고
                즐겁게 만들었으며, 유아들이 흥미를 가지고 학습할 수 있도록 구성했습니다.
                <br />
                <br />
                사이트 디자인에 맞춰 애니메이션 요소를 일부 추가하였습니다. 특히, 앱의 각 페이지나 동화책 페이지 전환 시
                부드러운 애니메이션 효과를 적용하여, 사용자가 자연스럽게 학습할 수 있도록 유도했습니다. 애니메이션
                캐릭터가 등장하여 학습을 도와주는 방식으로 유아들이 더 쉽게 집중할 수 있도록 돕고, 아이들이 지루해하지
                않도록 게임처럼 재미있게 학습을 유도하는 방식으로 진행되었습니다.
            </>
        ),
    },
    {
        src: "admin",
        key: 7,
        title: "VZON Admin",
        skill: ["HTML", "CSS", "jQeury"],
        desc: "밴대리점 통합 시스템 VZON 솔루션의 어드민 페이지 퍼블리싱 100% 참여함",
        date: "2019.07 ~ 2019.09",
        pc: ["admin01", "admin02", "admin03", "admin04"],
        details: (
            <>
                이 프로젝트는 밴대리점 전용 업무 프로그램인 브이존(VZON)의 관리자 페이지를 개발하는 프로젝트였습니다.
                브이존은 대리점 직원들이 상품 등록, 직원 관리, 통합 관리 등의 업무를 수행할 수 있도록 지원하는 업무 관리
                시스템입니다. 이 관리자 페이지는 VZON을 활용한 전반적인 업무 관리 및 설정을 담당하는 핵심적인 역할을
                하며, 관리자들이 직관적이고 효율적으로 업무를 처리할 수 있도록 돕는 페이지로 설계되었습니다. 브이존
                관리자 페이지는 직관적이고 쉽게 접근할 수 있도록 디자인하는 데 중점을 두었습니다.
                <br />
                <br />
                관리자 페이지는 다양한 기능적 요소들이 집합된 페이지로, 사용자가 다양한 작업을 한눈에 파악하고 쉽게
                수행할 수 있도록 설계되었습니다. 특히, 트렌디한 디자인을 반영하여 모던하고 깔끔한 UI/UX를
                구현하였습니다. 이 페이지는 많은 정보를 효율적으로 관리해야 하는 관리자들의 요구 사항을 충족시키기 위해,
                상세한 정보와 업무 항목들을 카드형 레이아웃과 모듈화된 구성으로 배치하여 가독성 높은 UI를 제공했습니다.
                이로써 사용자가 처음 페이지에 접근하였을 때 어떤 작업을 어디서 해야 하는지 직관적으로 알 수 있도록
                했습니다.
            </>
        ),
    },
    {
        src: "vzon",
        key: 8,
        title: "VZON",
        skill: ["HTML", "CSS", "jQeury"],
        desc: "밴대리점 통합 시스템 VZON 솔루션 PC와 MOBILE 퍼블리싱 100% 참여함",
        date: "2018.05 ~ 2019.12",
        pc: ["vzon01", "vzon02", "vzon03", "vzon04", "vzon05"],
        mobile: ["vzonm01", "vzonm02", "vzonm03", "vzonm04", "vzonm05"],
        details: (
            <>
                이 프로젝트는 VAN 대리점 전용 업무 프로그램인 VZON의 통합 업무지원 서비스를 개발한 작업이었습니다. 이
                서비스는 전자계약, 고객상담 기능을 비롯한 다양한 업무를 보다 편리하게 이용할 수 있도록 지원하는 통합 ERP
                서비스로, VAN 대리점의 업무 효율성을 크게 개선하는 역할을 합니다. 이번 프로젝트에서 퍼블리싱 업무를
                처음으로 맡았고, 단독으로 진행하면서 많은 성취감을 느꼈습니다.
                <br />
                <br />이 프로젝트는 약 210페이지에 달하는 방대한 양을 포함하는 페이지들로 이루어졌습니다. 각 페이지는
                VAN 대리점의 업무 특성에 맞추어 다양한 구조와 디자인 패턴을 채택하여, 사용자들이 각기 다른 업무를
                직관적으로 처리할 수 있도록 설계되었습니다. 특히, 각 페이지의 요소들이 매우 다양하고 방대했기에 페이지
                별로 고유의 디자인 패턴을 적용하고, **일관성 있는 사용자 경험(UX)**을 제공하는 데 중점을 두었습니다.
                이러한 작업은 사용자 편의성을 극대화할 수 있었습니다.
                <br />
                <br />
                프로젝트에서 사용된 주요 플러그인으로는 mCustomScrollbar.js, datetimepicker.js, bxSlider.js,
                jquery-ui.js가 있었습니다. 이 플러그인들은 다양한 기능적 요구를 충족시키기 위해 적용되었으며, 이를 통해
                커스터마이징을 하며 각 플러그인의 동작 원리와 사용법을 익혔습니다. 특히 mCustomScrollbar.js는 스크롤을
                보다 세련되게 처리할 수 있도록 했고, datetimepicker.js는 날짜 선택 기능을 편리하게 만들어 주었으며,
                bxSlider.js는 이미지 슬라이드를 효율적으로 구현하는 데 사용되었습니다. 이와 같은 자바스크립트 플러그인
                활용을 통해, 더욱 동적이고 반응성이 뛰어난 페이지를 구현할 수 있었습니다.
                <br />
                <br />
                이번 프로젝트는 웹 개발자와의 협업을 통해 진행되었습니다. 비즈니스 로직을 파악하며 퍼블리싱 작업을
                진행하는 과정에서 기능적인 요구사항과 UI/UX적 요구사항을 모두 반영하는 작업을 했습니다. 이를 통해, 웹
                개발의 전반적인 흐름을 이해하게 되었고, 프론트엔드와 백엔드 간의 원활한 협업의 중요성을 알게 되었습니다.
                <br />
                <br />
                모바일 버전의 퍼블리싱 작업은 이미 일부 작업이 진행된 상태에서 추가 및 수정 작업을 맡았습니다. 모바일
                최적화가 어느 정도 이루어진 상태에서 작업을 시작했기 때문에, 기존 파일을 이해하고 파악하는 과정에서
                처음에는 혼란스러움도 있었지만, 시간이 지나면서 다른 사람의 작업을 이해하는 능력이 많이 향상되었습니다.
            </>
        ),
    },
];
